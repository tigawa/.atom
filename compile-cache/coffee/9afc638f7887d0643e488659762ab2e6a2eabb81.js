(function() {
  var Path, Rails;

  Path = require('path');

  Rails = require('../lib/rails');

  describe('Rails', function() {
    var rails, rootPath;
    rootPath = Path.join(__dirname, 'fixtures');
    rails = new Rails(rootPath, ['spec', 'fast_spec'], 'spec');
    return describe('toggleSpecFile', function() {
      var libA, libASpec, libB, libBSpec, modelA, modelASpec, modelB, modelBSpec, viewA, viewASpec, viewHamlA, viewHamlASpec;
      libA = Path.join(rootPath, 'lib/a.rb');
      libASpec = Path.join(rootPath, 'spec/lib/a_spec.rb');
      modelA = Path.join(rootPath, 'app/models/a.rb');
      modelASpec = Path.join(rootPath, 'spec/models/a_spec.rb');
      libB = Path.join(rootPath, 'lib/b.rb');
      libBSpec = Path.join(rootPath, 'fast_spec/lib/b_spec.rb');
      modelB = Path.join(rootPath, 'app/models/b.rb');
      modelBSpec = Path.join(rootPath, 'fast_spec/models/b_spec.rb');
      viewA = Path.join(rootPath, 'app/views/a.html.erb');
      viewASpec = Path.join(rootPath, 'spec/views/a.html.erb_spec.rb');
      viewHamlA = Path.join(rootPath, 'app/views/a.html.haml');
      viewHamlASpec = Path.join(rootPath, 'spec/views/a.html.haml_spec.rb');
      it('returns spec file for tested file', function() {
        expect(rails.toggleSpecFile(libA)).toBe(libASpec);
        expect(rails.toggleSpecFile(modelA)).toBe(modelASpec);
        expect(rails.toggleSpecFile(viewA)).toBe(viewASpec);
        return expect(rails.toggleSpecFile(viewHamlA)).toBe(viewHamlASpec);
      });
      it('returns tested file for spec file', function() {
        expect(rails.toggleSpecFile(libASpec)).toBe(libA);
        expect(rails.toggleSpecFile(modelASpec)).toBe(modelA);
        expect(rails.toggleSpecFile(viewASpec)).toBe(viewA);
        return expect(rails.toggleSpecFile(viewHamlASpec)).toBe(viewHamlA);
      });
      it('returns null for not ruby file', function() {
        return expect(rails.toggleSpecFile('/f/rails/app/test.json')).toBeNull();
      });
      it('returns null for ruby file not in app or lib or spec folder', function() {
        return expect(rails.toggleSpecFile('/f/rails/config/application.rb')).toBeNull();
      });
      it('returns fast_spec file for tested file', function() {
        expect(rails.toggleSpecFile(libB)).toBe(libBSpec);
        return expect(rails.toggleSpecFile(modelB)).toBe(modelBSpec);
      });
      return it('returns tested file for fast_spec file', function() {
        expect(rails.toggleSpecFile(libBSpec)).toBe(libB);
        return expect(rails.toggleSpecFile(modelBSpec)).toBe(modelB);
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL1VzZXJzL2lnYXdhdGFpaWNoaS8uYXRvbS9wYWNrYWdlcy9yYWlscy1yc3BlYy9zcGVjL3JhaWxzLXNwZWMuY29mZmVlIgogIF0sCiAgIm5hbWVzIjogW10sCiAgIm1hcHBpbmdzIjogIkFBQUE7QUFBQSxNQUFBLFdBQUE7O0FBQUEsRUFBQSxJQUFBLEdBQU8sT0FBQSxDQUFRLE1BQVIsQ0FBUCxDQUFBOztBQUFBLEVBQ0EsS0FBQSxHQUFRLE9BQUEsQ0FBUSxjQUFSLENBRFIsQ0FBQTs7QUFBQSxFQUdBLFFBQUEsQ0FBUyxPQUFULEVBQWtCLFNBQUEsR0FBQTtBQUNoQixRQUFBLGVBQUE7QUFBQSxJQUFBLFFBQUEsR0FBVyxJQUFJLENBQUMsSUFBTCxDQUFVLFNBQVYsRUFBcUIsVUFBckIsQ0FBWCxDQUFBO0FBQUEsSUFDQSxLQUFBLEdBQVksSUFBQSxLQUFBLENBQU0sUUFBTixFQUFnQixDQUFDLE1BQUQsRUFBUyxXQUFULENBQWhCLEVBQXVDLE1BQXZDLENBRFosQ0FBQTtXQUdBLFFBQUEsQ0FBUyxnQkFBVCxFQUEyQixTQUFBLEdBQUE7QUFDekIsVUFBQSxrSEFBQTtBQUFBLE1BQUEsSUFBQSxHQUFPLElBQUksQ0FBQyxJQUFMLENBQVUsUUFBVixFQUFvQixVQUFwQixDQUFQLENBQUE7QUFBQSxNQUNBLFFBQUEsR0FBVyxJQUFJLENBQUMsSUFBTCxDQUFVLFFBQVYsRUFBb0Isb0JBQXBCLENBRFgsQ0FBQTtBQUFBLE1BRUEsTUFBQSxHQUFTLElBQUksQ0FBQyxJQUFMLENBQVUsUUFBVixFQUFvQixpQkFBcEIsQ0FGVCxDQUFBO0FBQUEsTUFHQSxVQUFBLEdBQWEsSUFBSSxDQUFDLElBQUwsQ0FBVSxRQUFWLEVBQW9CLHVCQUFwQixDQUhiLENBQUE7QUFBQSxNQUlBLElBQUEsR0FBTyxJQUFJLENBQUMsSUFBTCxDQUFVLFFBQVYsRUFBb0IsVUFBcEIsQ0FKUCxDQUFB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

//# sourceURL=/Users/igawataiichi/.atom/packages/rails-rspec/spec/rails-spec.coffee

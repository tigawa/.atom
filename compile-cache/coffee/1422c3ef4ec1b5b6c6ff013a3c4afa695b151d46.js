(function() {
  var COMMAND_CONFIG_KEY, DEFAULT_ARGS, DEFAULT_LOCATION, DEFAULT_MESSAGE, OLD_ARGS_CONFIG_KEY, OLD_EXEC_PATH_CONFIG_KEY, WARNINGS, convertOldConfig, helpers, lint, linter, path;

  path = require('path');

  helpers = require('atom-linter');

  COMMAND_CONFIG_KEY = 'linter-rubocop.command';

  OLD_EXEC_PATH_CONFIG_KEY = 'linter-rubocop.executablePath';

  OLD_ARGS_CONFIG_KEY = 'linter-rubocop.additionalArguments';

  DEFAULT_LOCATION = {
    line: 1,
    column: 1,
    length: 0
  };

  DEFAULT_ARGS = ['--cache', 'false', '--force-exclusion', '-f', 'json', '-s'];

  DEFAULT_MESSAGE = 'Unknown Error';

  WARNINGS = new Set(['refactor', 'convention', 'warning']);

  convertOldConfig = function() {
    var args, execPath;
    execPath = atom.config.get(OLD_EXEC_PATH_CONFIG_KEY);
    args = atom.config.get(OLD_ARGS_CONFIG_KEY);
    if (!(execPath || args)) {
      return;
    }
    atom.config.set(COMMAND_CONFIG_KEY, ("" + (execPath || '') + " " + (args || '')).trim());
    atom.config.set(OLD_EXEC_PATH_CONFIG_KEY, void 0);
    return atom.config.set(OLD_ARGS_CONFIG_KEY, void 0);
  };

  lint = function(editor) {
    var command, cwd, filePath, stdin, stream;
    convertOldConfig();
    command = atom.config.get(COMMAND_CONFIG_KEY).split(/\s+/).filter(function(i) {
      return i;
    }).concat(DEFAULT_ARGS, filePath = editor.getPath());
    cwd = path.dirname(helpers.find(filePath, '.'));
    stdin = editor.getText();
    stream = 'both';
    return helpers.exec(command[0], command.slice(1), {
      cwd: cwd,
      stdin: stdin,
      stream: stream
    }).then(function(result) {
      var parsed, stderr, stdout, _ref, _ref1;
      stdout = result.stdout, stderr = result.stderr;
      parsed = (function() {
        try {
          return JSON.parse(stdout);
        } catch (_error) {}
      })();
      if (typeof parsed !== 'object') {
        throw new Error(stderr || stdout);
      }
      return (((_ref = parsed.files) != null ? (_ref1 = _ref[0]) != null ? _ref1.offenses : void 0 : void 0) || []).map(function(offense) {
        var column, cop_name, length, line, location, message, severity, _ref;
        cop_name = offense.cop_name, location = offense.location, message = offense.message, severity = offense.severity;
        _ref = location || DEFAULT_LOCATION, line = _ref.line, column = _ref.column, length = _ref.length;
        return {
          type: WARNINGS.has(severity) ? 'Warning' : 'Error',
          text: (message || DEFAULT_MESSAGE) + (cop_name ? " (" + cop_name + ")" : ''),
          filePath: filePath,
          range: [[line - 1, column - 1], [line - 1, column + length - 1]]
        };
      });
    });
  };

  linter = {
    name: 'RuboCop',
    grammarScopes: ['source.ruby', 'source.ruby.rails', 'source.ruby.rspec', 'source.ruby.chef'],
    scope: 'file',
    lintOnFly: true,
    lint: lint
  };

  module.exports = {
    config: {
      command: {
        type: 'string',
        title: 'Command',
        "default": 'rubocop',
        description: 'This is the absolute path to your `rubocop` command. You may need to run `which rubocop` or `rbenv which rubocop` to find this. Examples: `/usr/local/bin/rubocop` or `/usr/local/bin/bundle exec rubocop --config /my/rubocop.yml`.'
      }
    },
    provideLinter: function() {
      return linter;
    }
  };

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL1VzZXJzL2lnYXdhdGFpaWNoaS8uYXRvbS9wYWNrYWdlcy9saW50ZXItcnVib2NvcC9pbmRleC5jb2ZmZWUiCiAgXSwKICAibmFtZXMiOiBbXSwKICAibWFwcGluZ3MiOiAiQUFBQTtBQUFBLE1BQUEsMktBQUE7O0FBQUEsRUFBQSxJQUFBLEdBQU8sT0FBQSxDQUFRLE1BQVIsQ0FBUCxDQUFBOztBQUFBLEVBQ0EsT0FBQSxHQUFVLE9BQUEsQ0FBUSxhQUFSLENBRFYsQ0FBQTs7QUFBQSxFQUdBLGtCQUFBLEdBQXFCLHdCQUhyQixDQUFBOztBQUFBLEVBSUEsd0JBQUEsR0FBMkIsK0JBSjNCLENBQUE7O0FBQUEsRUFLQSxtQkFBQSxHQUFzQixvQ0FMdEIsQ0FBQTs7QUFBQSxFQU1BLGdCQUFBLEdBQW1CO0FBQUEsSUFBQyxJQUFBLEVBQU0sQ0FBUDtBQUFBLElBQVUsTUFBQSxFQUFRLENBQWxCO0FBQUEsSUFBcUIsTUFBQSxFQUFRLENBQTdCO0dBTm5CLENBQUE7O0FBQUEsRUFPQSxZQUFBLEdBQWUsQ0FBQyxTQUFELEVBQVksT0FBWixFQUFxQixtQkFBckIsRUFBMEMsSUFBMUMsRUFBZ0QsTUFBaEQsRUFBd0QsSUFBeEQsQ0FQZixDQUFBOztBQUFBLEVBUUEsZUFBQSxHQUFrQixlQVJsQixDQUFBOztBQUFBLEVBU0EsUUFBQSxHQUFlLElBQUEsR0FBQSxDQUFJLENBQUMsVUFBRCxFQUFhLFlBQWIsRUFBMkIsU0FBM0IsQ0FBSixDQVRmLENBQUE7O0FBQUEsRUFXQSxnQkFBQSxHQUFtQixTQUFBLEdBQUE7QUFDakIsUUFBQSxjQUFBO0FBQUEsSUFBQSxRQUFBLEdBQVcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFaLENBQWdCLHdCQUFoQixDQUFYLENBQUE7QUFBQSxJQUNBLElBQUEsR0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQVosQ0FBZ0IsbUJBQWhCLENBRFAsQ0FB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

//# sourceURL=/Users/igawataiichi/.atom/packages/linter-rubocop/index.coffee

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.$class = undefined;
exports.processListItems = processListItems;
exports.showError = showError;
exports.disposableEvent = disposableEvent;
exports.stoppingEvent = stoppingEvent;

var _atom = require('atom');

const $class = exports.$class = '__$sb_intentions_class';

function processListItems(suggestions) {
  for (let i = 0, length = suggestions.length; i < length; ++i) {
    const suggestion = suggestions[i];
    const className = [];
    if (suggestion.class) {
      className.push(suggestion.class.trim());
    }
    if (suggestion.icon) {
      className.push(`icon icon-${suggestion.icon}`);
    }
    suggestion[$class] = className.join(' ');
  }

  return suggestions.sort(function (a, b) {
    return b.priority - a.priority;
  });
}

function showError(message, detail = null) {
  if (message instanceof Error) {
    detail = message.stack;
    message = message.message;
  }
  atom.notifications.addError(`[Intentions] ${message}`, {
    detail,
    dismissable: true
  });
}

function disposableEvent(element, eventName, callback) {
  element.addEventListener(eventName, callback);
  return new _atom.Disposable(function () {
    element.removeEventListener(eventName, callback);
  });
}

function stoppingEvent(callback) {
  return function (event) {
    event.stopImmediatePropagation();
    callback.call(this, event);
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnMuanMiXSwibmFtZXMiOlsicHJvY2Vzc0xpc3RJdGVtcyIsInNob3dFcnJvciIsImRpc3Bvc2FibGVFdmVudCIsInN0b3BwaW5nRXZlbnQiLCIkY2xhc3MiLCJzdWdnZXN0aW9ucyIsImkiLCJsZW5ndGgiLCJzdWdnZXN0aW9uIiwiY2xhc3NOYW1lIiwiY2xhc3MiLCJwdXNoIiwidHJpbSIsImljb24iLCJqb2luIiwic29ydCIsImEiLCJiIiwicHJpb3JpdHkiLCJtZXNzYWdlIiwiZGV0YWlsIiwiRXJyb3IiLCJzdGFjayIsImF0b20iLCJub3RpZmljYXRpb25zIiwiYWRkRXJyb3IiLCJkaXNtaXNzYWJsZSIsImVsZW1lbnQiLCJldmVudE5hbWUiLCJjYWxsYmFjayIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJjYWxsIl0sIm1hcHBpbmdzIjoiOzs7O1FBT2dCQSxnQixHQUFBQSxnQjtRQWtCQUMsUyxHQUFBQSxTO1FBV0FDLGUsR0FBQUEsZTtRQU9BQyxhLEdBQUFBLGE7O0FBekNoQjs7QUFHTyxNQUFNQywwQkFBUyx3QkFBZjs7QUFFQSxTQUFTSixnQkFBVCxDQUEwQkssV0FBMUIsRUFBeUU7QUFDOUUsT0FBSyxJQUFJQyxJQUFJLENBQVIsRUFBV0MsU0FBU0YsWUFBWUUsTUFBckMsRUFBNkNELElBQUlDLE1BQWpELEVBQXlELEVBQUVELENBQTNELEVBQThEO0FBQzVELFVBQU1FLGFBQWFILFlBQVlDLENBQVosQ0FBbkI7QUFDQSxVQUFNRyxZQUFZLEVBQWxCO0FBQ0EsUUFBSUQsV0FBV0UsS0FBZixFQUFzQjtBQUNwQkQsZ0JBQVVFLElBQVYsQ0FBZUgsV0FBV0UsS0FBWCxDQUFpQkUsSUFBakIsRUFBZjtBQUNEO0FBQ0QsUUFBSUosV0FBV0ssSUFBZixFQUFxQjtBQUNuQkosZ0JBQVVFLElBQVYsQ0FBZ0IsYUFBWUgsV0FBV0ssSUFBSyxFQUE1QztBQUNEO0FBQ0RMLGVBQVdKLE1BQVgsSUFBcUJLLFVBQVVLLElBQVYsQ0FBZSxHQUFmLENBQXJCO0FBQ0Q7O0FBRUQsU0FBT1QsWUFBWVUsSUFBWixDQUFpQixVQUFTQyxDQUFULEVBQVlDLENBQVosRUFBZTtBQUNyQyxXQUFPQSxFQUFFQyxRQUFGLEdBQWFGLEVBQUVFLFFBQXRCO0FBQ0QsR0FGTSxDQUFQO0FBR0Q7O0FBRU0sU0FBU2pCLFNBQVQsQ0FBbUJrQixPQUFuQixFQUE0Q0MsU0FBa0IsSUFBOUQsRUFBb0U7QUFDekUsTUFBSUQsbUJBQW1CRSxLQUF2QixFQUE4QjtBQUM1QkQsYUFBU0QsUUFBUUcsS0FBakI7QUFDQUgsY0FBVUEsUUFBUUEsT0FBbEI7QUFDRDtBQUNESSxPQUFLQyxhQUFMLENBQW1CQyxRQUFuQixDQUE2QixnQkFBZU4sT0FBUSxFQUFwRCxFQUF1RDtBQUNyREMsVUFEcUQ7QUFFckRNLGlCQUFhO0FBRndDLEdBQXZEO0FBSUQ7O0FBRU0sU0FBU3hCLGVBQVQsQ0FBeUJ5QixPQUF6QixFQUErQ0MsU0FBL0MsRUFBa0VDLFFBQWxFLEVBQWtHO0FBQ3ZHRixVQUFRRyxnQkFBUixDQUF5QkYsU0FBekIsRUFBb0NDLFFBQXBDO0FBQ0EsU0FBTyxxQkFBZSxZQUFXO0FBQy9CRixZQUFRSSxtQkFBUixDQUE0QkgsU0FBNUIsRUFBdUNDLFFBQXZDO0FBQ0QsR0FGTSxDQUFQO0FBR0Q7O0FBRU0sU0FBUzFCLGFBQVQsQ0FBdUIwQixRQUF2QixFQUFvRjtBQUN6RixTQUFPLFVBQVVHLEtBQVYsRUFBd0I7QUFDN0JBLFVBQU1DLHdCQUFOO0FBQ0FKLGFBQVNLLElBQVQsQ0FBYyxJQUFkLEVBQW9CRixLQUFwQjtBQUNELEdBSEQ7QUFJRCIsImZpbGUiOiJoZWxwZXJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogQGZsb3cgKi9cblxuaW1wb3J0IHsgRGlzcG9zYWJsZSB9IGZyb20gJ2F0b20nXG5pbXBvcnQgdHlwZSB7IExpc3RJdGVtIH0gZnJvbSAnLi90eXBlcydcblxuZXhwb3J0IGNvbnN0ICRjbGFzcyA9ICdfXyRzYl9pbnRlbnRpb25zX2NsYXNzJ1xuXG5leHBvcnQgZnVuY3Rpb24gcHJvY2Vzc0xpc3RJdGVtcyhzdWdnZXN0aW9uczogQXJyYXk8TGlzdEl0ZW0+KTogQXJyYXk8TGlzdEl0ZW0+IHtcbiAgZm9yIChsZXQgaSA9IDAsIGxlbmd0aCA9IHN1Z2dlc3Rpb25zLmxlbmd0aDsgaSA8IGxlbmd0aDsgKytpKSB7XG4gICAgY29uc3Qgc3VnZ2VzdGlvbiA9IHN1Z2dlc3Rpb25zW2ldXG4gICAgY29uc3QgY2xhc3NOYW1lID0gW11cbiAgICBpZiAoc3VnZ2VzdGlvbi5jbGFzcykge1xuICAgICAgY2xhc3NOYW1lLnB1c2goc3VnZ2VzdGlvbi5jbGFzcy50cmltKCkpXG4gICAgfVxuICAgIGlmIChzdWdnZXN0aW9uLmljb24pIHtcbiAgICAgIGNsYXNzTmFtZS5wdXNoKGBpY29uIGljb24tJHtzdWdnZXN0aW9uLmljb259YClcbiAgICB9XG4gICAgc3VnZ2VzdGlvblskY2xhc3NdID0gY2xhc3NOYW1lLmpvaW4oJyAnKVxuICB9XG5cbiAgcmV0dXJuIHN1Z2dlc3Rpb25zLnNvcnQoZnVuY3Rpb24oYSwgYikge1xuICAgIHJldHVybiBiLnByaW9yaXR5IC0gYS5wcmlvcml0eVxuICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc2hvd0Vycm9yKG1lc3NhZ2U6IEVycm9yIHwgc3RyaW5nLCBkZXRhaWw6ID9zdHJpbmcgPSBudWxsKSB7XG4gIGlmIChtZXNzYWdlIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICBkZXRhaWwgPSBtZXNzYWdlLnN0YWNrXG4gICAgbWVzc2FnZSA9IG1lc3NhZ2UubWVzc2FnZVxuICB9XG4gIGF0b20ubm90aWZpY2F0aW9ucy5hZGRFcnJvcihgW0ludGVudGlvbnNdICR7bWVzc2FnZX1gLCB7XG4gICAgZGV0YWlsLFxuICAgIGRpc21pc3NhYmxlOiB0cnVlLFxuICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZGlzcG9zYWJsZUV2ZW50KGVsZW1lbnQ6IEhUTUxFbGVtZW50LCBldmVudE5hbWU6IHN0cmluZywgY2FsbGJhY2s6IEZ1bmN0aW9uKTogRGlzcG9zYWJsZSB7XG4gIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGNhbGxiYWNrKVxuICByZXR1cm4gbmV3IERpc3Bvc2FibGUoZnVuY3Rpb24oKSB7XG4gICAgZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgY2FsbGJhY2spXG4gIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdG9wcGluZ0V2ZW50KGNhbGxiYWNrOiAoKGV2ZW50OiBFdmVudCkgPT4gYW55KSk6ICgoZXZlbnQ6IEV2ZW50KSA9PiB2b2lkKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoZXZlbnQ6IEV2ZW50KSB7XG4gICAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKClcbiAgICBjYWxsYmFjay5jYWxsKHRoaXMsIGV2ZW50KVxuICB9XG59XG4iXX0=
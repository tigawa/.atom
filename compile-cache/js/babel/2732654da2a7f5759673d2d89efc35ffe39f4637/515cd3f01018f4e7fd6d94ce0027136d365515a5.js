Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _atom = require('atom');

var _editorLinter = require('./editor-linter');

var _editorLinter2 = _interopRequireDefault(_editorLinter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

let EditorRegistry = class EditorRegistry {

  constructor() {
    this.emitter = new _atom.Emitter();
    this.subscriptions = new _atom.CompositeDisposable();
    this.editorLinters = new Map();

    this.subscriptions.add(this.emitter);
    this.subscriptions.add(atom.config.observe('linter.lintOnOpen', lintOnOpen => {
      this.lintOnOpen = lintOnOpen;
    }));
  }
  activate() {
    this.subscriptions.add(atom.workspace.observeTextEditors(textEditor => {
      this.createFromTextEditor(textEditor);
    }));
  }
  get(textEditor) {
    return this.editorLinters.get(textEditor);
  }
  createFromTextEditor(textEditor) {
    let editorLinter = this.editorLinters.get(textEditor);
    if (editorLinter) {
      return editorLinter;
    }
    editorLinter = new _editorLinter2.default(textEditor);
    editorLinter.onDidDestroy(() => {
      this.editorLinters.delete(textEditor);
    });
    this.editorLinters.set(textEditor, editorLinter);
    this.emitter.emit('observe', editorLinter);
    if (this.lintOnOpen) {
      editorLinter.lint();
    }
    return editorLinter;
  }
  observe(callback) {
    this.editorLinters.forEach(callback);
    return this.emitter.on('observe', callback);
  }
  dispose() {
    for (const entry of this.editorLinters.values()) {
      entry.dispose();
    }
    this.subscriptions.dispose();
  }
};
exports.default = EditorRegistry;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVkaXRvci1yZWdpc3RyeS5qcyJdLCJuYW1lcyI6WyJFZGl0b3JSZWdpc3RyeSIsImNvbnN0cnVjdG9yIiwiZW1pdHRlciIsInN1YnNjcmlwdGlvbnMiLCJlZGl0b3JMaW50ZXJzIiwiTWFwIiwiYWRkIiwiYXRvbSIsImNvbmZpZyIsIm9ic2VydmUiLCJsaW50T25PcGVuIiwiYWN0aXZhdGUiLCJ3b3Jrc3BhY2UiLCJvYnNlcnZlVGV4dEVkaXRvcnMiLCJ0ZXh0RWRpdG9yIiwiY3JlYXRlRnJvbVRleHRFZGl0b3IiLCJnZXQiLCJlZGl0b3JMaW50ZXIiLCJvbkRpZERlc3Ryb3kiLCJkZWxldGUiLCJzZXQiLCJlbWl0IiwibGludCIsImNhbGxiYWNrIiwiZm9yRWFjaCIsIm9uIiwiZGlzcG9zZSIsImVudHJ5IiwidmFsdWVzIl0sIm1hcHBpbmdzIjoiOzs7OztBQUVBOztBQUVBOzs7Ozs7SUFFcUJBLGMsR0FBTixNQUFNQSxjQUFOLENBQXFCOztBQU1sQ0MsZ0JBQWM7QUFDWixTQUFLQyxPQUFMLEdBQWUsbUJBQWY7QUFDQSxTQUFLQyxhQUFMLEdBQXFCLCtCQUFyQjtBQUNBLFNBQUtDLGFBQUwsR0FBcUIsSUFBSUMsR0FBSixFQUFyQjs7QUFFQSxTQUFLRixhQUFMLENBQW1CRyxHQUFuQixDQUF1QixLQUFLSixPQUE1QjtBQUNBLFNBQUtDLGFBQUwsQ0FBbUJHLEdBQW5CLENBQXVCQyxLQUFLQyxNQUFMLENBQVlDLE9BQVosQ0FBb0IsbUJBQXBCLEVBQTBDQyxVQUFELElBQWdCO0FBQzlFLFdBQUtBLFVBQUwsR0FBa0JBLFVBQWxCO0FBQ0QsS0FGc0IsQ0FBdkI7QUFHRDtBQUNEQyxhQUFXO0FBQ1QsU0FBS1IsYUFBTCxDQUFtQkcsR0FBbkIsQ0FBdUJDLEtBQUtLLFNBQUwsQ0FBZUMsa0JBQWYsQ0FBbUNDLFVBQUQsSUFBZ0I7QUFDdkUsV0FBS0Msb0JBQUwsQ0FBMEJELFVBQTFCO0FBQ0QsS0FGc0IsQ0FBdkI7QUFHRDtBQUNERSxNQUFJRixVQUFKLEVBQTJDO0FBQ3pDLFdBQU8sS0FBS1YsYUFBTCxDQUFtQlksR0FBbkIsQ0FBdUJGLFVBQXZCLENBQVA7QUFDRDtBQUNEQyx1QkFBcUJELFVBQXJCLEVBQTJEO0FBQ3pELFFBQUlHLGVBQWUsS0FBS2IsYUFBTCxDQUFtQlksR0FBbkIsQ0FBdUJGLFVBQXZCLENBQW5CO0FBQ0EsUUFBSUcsWUFBSixFQUFrQjtBQUNoQixhQUFPQSxZQUFQO0FBQ0Q7QUFDREEsbUJBQWUsMkJBQWlCSCxVQUFqQixDQUFmO0FBQ0FHLGlCQUFhQyxZQUFiLENBQTBCLE1BQU07QUFDOUIsV0FBS2QsYUFBTCxDQUFtQmUsTUFBbkIsQ0FBMEJMLFVBQTFCO0FBQ0QsS0FGRDtBQUdBLFNBQUtWLGFBQUwsQ0FBbUJnQixHQUFuQixDQUF1Qk4sVUFBdkIsRUFBbUNHLFlBQW5DO0FBQ0EsU0FBS2YsT0FBTCxDQUFhbUIsSUFBYixDQUFrQixTQUFsQixFQUE2QkosWUFBN0I7QUFDQSxRQUFJLEtBQUtQLFVBQVQsRUFBcUI7QUFDbkJPLG1CQUFhSyxJQUFiO0FBQ0Q7QUFDRCxXQUFPTCxZQUFQO0FBQ0Q7QUFDRFIsVUFBUWMsUUFBUixFQUFzRTtBQUNwRSxTQUFLbkIsYUFBTCxDQUFtQm9CLE9BQW5CLENBQTJCRCxRQUEzQjtBQUNBLFdBQU8sS0FBS3JCLE9BQUwsQ0FBYXVCLEVBQWIsQ0FBZ0IsU0FBaEIsRUFBMkJGLFFBQTNCLENBQVA7QUFDRDtBQUNERyxZQUFVO0FBQ1IsU0FBSyxNQUFNQyxLQUFYLElBQW9CLEtBQUt2QixhQUFMLENBQW1Cd0IsTUFBbkIsRUFBcEIsRUFBaUQ7QUFDL0NELFlBQU1ELE9BQU47QUFDRDtBQUNELFNBQUt2QixhQUFMLENBQW1CdUIsT0FBbkI7QUFDRDtBQWpEaUMsQztrQkFBZjFCLGMiLCJmaWxlIjoiZWRpdG9yLXJlZ2lzdHJ5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogQGZsb3cgKi9cblxuaW1wb3J0IHsgRW1pdHRlciwgQ29tcG9zaXRlRGlzcG9zYWJsZSB9IGZyb20gJ2F0b20nXG5pbXBvcnQgdHlwZSB7IERpc3Bvc2FibGUsIFRleHRFZGl0b3IgfSBmcm9tICdhdG9tJ1xuaW1wb3J0IEVkaXRvckxpbnRlciBmcm9tICcuL2VkaXRvci1saW50ZXInXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVkaXRvclJlZ2lzdHJ5IHtcbiAgZW1pdHRlcjogRW1pdHRlcjtcbiAgbGludE9uT3BlbjogYm9vbGVhbjtcbiAgc3Vic2NyaXB0aW9uczogQ29tcG9zaXRlRGlzcG9zYWJsZTtcbiAgZWRpdG9yTGludGVyczogTWFwPFRleHRFZGl0b3IsIEVkaXRvckxpbnRlcj47XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5lbWl0dGVyID0gbmV3IEVtaXR0ZXIoKVxuICAgIHRoaXMuc3Vic2NyaXB0aW9ucyA9IG5ldyBDb21wb3NpdGVEaXNwb3NhYmxlKClcbiAgICB0aGlzLmVkaXRvckxpbnRlcnMgPSBuZXcgTWFwKClcblxuICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5hZGQodGhpcy5lbWl0dGVyKVxuICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5hZGQoYXRvbS5jb25maWcub2JzZXJ2ZSgnbGludGVyLmxpbnRPbk9wZW4nLCAobGludE9uT3BlbikgPT4ge1xuICAgICAgdGhpcy5saW50T25PcGVuID0gbGludE9uT3BlblxuICAgIH0pKVxuICB9XG4gIGFjdGl2YXRlKCkge1xuICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5hZGQoYXRvbS53b3Jrc3BhY2Uub2JzZXJ2ZVRleHRFZGl0b3JzKCh0ZXh0RWRpdG9yKSA9PiB7XG4gICAgICB0aGlzLmNyZWF0ZUZyb21UZXh0RWRpdG9yKHRleHRFZGl0b3IpXG4gICAgfSkpXG4gIH1cbiAgZ2V0KHRleHRFZGl0b3I6IFRleHRFZGl0b3IpOiA/RWRpdG9yTGludGVyIHtcbiAgICByZXR1cm4gdGhpcy5lZGl0b3JMaW50ZXJzLmdldCh0ZXh0RWRpdG9yKVxuICB9XG4gIGNyZWF0ZUZyb21UZXh0RWRpdG9yKHRleHRFZGl0b3I6IFRleHRFZGl0b3IpOiBFZGl0b3JMaW50ZXIge1xuICAgIGxldCBlZGl0b3JMaW50ZXIgPSB0aGlzLmVkaXRvckxpbnRlcnMuZ2V0KHRleHRFZGl0b3IpXG4gICAgaWYgKGVkaXRvckxpbnRlcikge1xuICAgICAgcmV0dXJuIGVkaXRvckxpbnRlclxuICAgIH1cbiAgICBlZGl0b3JMaW50ZXIgPSBuZXcgRWRpdG9yTGludGVyKHRleHRFZGl0b3IpXG4gICAgZWRpdG9yTGludGVyLm9uRGlkRGVzdHJveSgoKSA9PiB7XG4gICAgICB0aGlzLmVkaXRvckxpbnRlcnMuZGVsZXRlKHRleHRFZGl0b3IpXG4gICAgfSlcbiAgICB0aGlzLmVkaXRvckxpbnRlcnMuc2V0KHRleHRFZGl0b3IsIGVkaXRvckxpbnRlcilcbiAgICB0aGlzLmVtaXR0ZXIuZW1pdCgnb2JzZXJ2ZScsIGVkaXRvckxpbnRlcilcbiAgICBpZiAodGhpcy5saW50T25PcGVuKSB7XG4gICAgICBlZGl0b3JMaW50ZXIubGludCgpXG4gICAgfVxuICAgIHJldHVybiBlZGl0b3JMaW50ZXJcbiAgfVxuICBvYnNlcnZlKGNhbGxiYWNrOiAoKGVkaXRvckxpbnRlcjogRWRpdG9yTGludGVyKSA9PiB2b2lkKSk6IERpc3Bvc2FibGUge1xuICAgIHRoaXMuZWRpdG9yTGludGVycy5mb3JFYWNoKGNhbGxiYWNrKVxuICAgIHJldHVybiB0aGlzLmVtaXR0ZXIub24oJ29ic2VydmUnLCBjYWxsYmFjaylcbiAgfVxuICBkaXNwb3NlKCkge1xuICAgIGZvciAoY29uc3QgZW50cnkgb2YgdGhpcy5lZGl0b3JMaW50ZXJzLnZhbHVlcygpKSB7XG4gICAgICBlbnRyeS5kaXNwb3NlKClcbiAgICB9XG4gICAgdGhpcy5zdWJzY3JpcHRpb25zLmRpc3Bvc2UoKVxuICB9XG59XG4iXX0=